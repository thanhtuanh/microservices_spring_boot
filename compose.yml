name: freddy-bbq

services:
  shop-frontend:
    container_name: shop-frontend
    build: shop-frontend
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=shop-frontend
      - OTEL_TRACES_SAMPLER=always_on
    ports:
      - "4200:4200"
    depends_on:
      - otel-collector
      - keycloak

  order:
    container_name: order
    build: order
    environment:
      - DELIVERY_SERVICE_URL=http://delivery:8050
      - KITCHEN_SERVICE_URL=http://kitchen:8070
      - OTEL_HOST=otel-collector
      - KEYCLOAK_HOST=keycloak
    ports:
      - "8060:8060"
    depends_on:
      - otel-collector
      - keycloak

  delivery:
    container_name: delivery
    build: delivery
    networks:
      - otel-network
    environment:
      - OTEL_HOST=otel-collector
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    ports:
      - "8050:8050"
    depends_on:
      - otel-collector

  kitchen:
    container_name: kitchen
    build: kitchen
    environment:
      - OTEL_HOST=otel-collector
    ports:
      - "8070:8070"
    depends_on:
      - otel-collector

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    networks:
      - otel-network
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "1888:1888" # pprof
      - "8888:8888" # Prometheus metrics
      - "8889:8889" # Prometheus exporter
      - "13133:13133" # health_check
      - "4320:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
      - "55679:55679" # zpages
    depends_on:
      - tempo
      - jaeger-all-in-one
      - loki

  promtail:
    container_name: promtail
    image: grafana/promtail
    volumes:
      - ./docker/loki/promtail-config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    depends_on:
      loki:
        condition: service_healthy
    user: root

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - otel-collector

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - ./docker/loki/data:/loki # Persistente Speicherung von Loki-Daten
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
  tempo:
    container_name: tempo
    networks:
      - otel-network
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "3200:3200"
      - "4317:4317"
    depends_on:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - prometheus
      - loki

  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    networks:
      - otel-network
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI für Jaeger
      - "14268:14268" # Collector für OpenTelemetry
      - "14250:14250" # gRPC
      - "4319:4317" # OpenTelemetry gRPC
      - "9411:9411" # Zipkin-API (Fix!)
    depends_on:
      - tempo

  oauth2-proxy:
    build: docker/oauth2-proxy
    ports:
      - "4180:4180"
    depends_on:
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: "keycloak"
    ports:
      - "8080:8080"
    environment:
      - KC_HOSTNAME=keycloak
      - KEYCLOAK_HOSTNAME=keycloak
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=a
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./docker/keycloak/realm.json:/opt/keycloak/data/import/realm.json

networks:
  otel-network:
    driver: bridge
  loki:
    driver: bridge
